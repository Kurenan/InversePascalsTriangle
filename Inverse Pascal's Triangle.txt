Inverse Pascal’s Triangle [working title]


Definition
The Inverse Pascal’s Triangle is an array of single-digit integer sequences, with the first sequence in the array comprising the input, and the following sequences comprising the calculated result. The values in each sequence, except the first, are calculated from the sequence preceding it. The values are calculated by taking the absolute value of the difference between each number and the number following it, until the end of the sequence is reached. These calculated values are then inserted into the next sequence, resulting in a sequence that has 1 fewer values in it than the preceding sequence. This is carried out until the final sequence, which has 1 value.


This can be visualized as an array this way:


[
{ 6, 3, 2, 1, 9, 3, 0, 4 },
{ 3, 1, 1, 8, 6, 3, 4 },
{ 2, 0, 7, 2, 3, 1 },
{ 2, 5, 5, 1, 2 },
{ 3, 0, 4, 1 },
{ 3, 4, 3 },
{ 1, 1 },
{ 0 }
]


Or as an inverted triangle, as follows:


6   3   2   1   9   3   0   4
   3   1   1   8   6   3   4
      2   0   7   2   3   1
         2   5   5   1   2
            3   0   4   1
               3   4   3
                  1   1
                     0
________________
Comparison with Pascal’s Triangle
Whereas Pascal’s Triangle uses addition to generate numbers, the “inverse” version uses subtraction. Pascal’s Triangle is an innate mathematical experiment, requiring only the number 1 to generate an infinite number of sequences, whereas the inverse triangle requires input to function. The inverse triangle also has the advantage of always consisting of single-digit numbers. The original version can become quite messy when written out, due to addition being used.


Properties
Number Systems
The Inverse Pascal’s Triangle can be used with any number system, as long as only a single digit is used. Thus different upper and lower limits can be expressed, depending on the system.


Total Values
The total number of values in the triangle can be calculated using the nth triangle number as follows:





Where n is the number of values in the input sequence.


In the example above, n = 8, since there are 8 numbers in the input sequence, resulting in 36 total numbers in the triangle.
________________


Possible Results
Input Is All One Value
In the case of every number in the input (first) sequence being one value, the result is zero for every value in the proceeding sequences.


3   3   3   3   3   3   3   3
   0   0   0   0   0   0   0
      0   0   0   0   0   0
         0   0   0   0   0
            0   0   0   0
               0   0   0
                  0   0
                     0


Input Results in Exclusively N 
To further define the above result, when each value in the input sequence differs from its neighbors by n, the result is the next sequence being populated exclusively by n, each subsequent sequence containing exclusively zeroes.


1   2   3   4   5   6
   1   1   1   1   1
      0   0   0   0
         0   0   0
            0   0
               0


1   6   1   6   1   6
   5   5   5   5   5
      0   0   0   0
         0   0   0
            0   0
               0
      
Binary Line
It is possible for the Inverted Pascal’s Triangle to reach a point when only ones and/or zeroes are produced. This point is called the Binary Line due to its similarity with the binary number system. Incidentally, if the input sequence consists of binary to begin with, the Binary Line is above the input sequence, since the entire triangle will consist of ones and/or zeroes.
  



(The above diagram was produced with this tool)


Depending on the input, the Binary Line may be higher up or lower down in the triangle, if it exists at all.


It is possible to produce a triangle without a Binary Line:


0   9   2
   9   7
      2


0   9   2   5
   9   7   3
      2   4
         2


0   9   1   5   0
   9   8   2   5
      1   6   3
         5   3
            2




The simplest way to guarantee a triangle without a Binary Line is to verify that for the input sequence the values of the first and last elements should differ from one another by at least 2, one or the other must be greater than zero, and all other values (if any) must be 0:



  


S  being the input sequence and n being the length of the sequence. 


Here is an example:




9   0   0   0   0   0   0   7
   9   0   0   0   0   0   7
      9   0   0   0   0   7
         9   0   0   0   7
            9   0   0   7
               9   0   7
                  9   7
                     2


“Pizza Slices”
In large Inverse Pascal’s Trangles, smaller triangles of zeroes may be seen. These are informally called “pizza slices” due to their similarity to pepperoni pizza. The frequency of these inner triangles depends on how often equal values appear next to one another in a sequence.


The smallest “pizza slice” consists of a total of 3 zeroes over 2 rows:


1   2   9   9   9   4
   1   7   0   0   5
      6   7   0   5
         1   7   5
            6   2
               4


The size of an inner triangle, therefore, can be defined as consisting of n zeroes, n being the number of consecutive numbers of the same value greater than 0, over n - 1 rows.




Decay
The highest value that will ever exist in an Inverse Pascal’s Triangle is equal to the highest value in the input sequence. Depending on the other values in the input sequence, the highest value in the following sequences will progressively drop, until the only values consist of 0, or 1 and 0. This is called “decay”.


Generally speaking, the more consecutive zeroes the input sequence has, the slower the highest number in the input sequence will decay, if at all. 
Edges
The input sequence is only one of 3 sides to the Inverse Pascal’s Triangle. Each edge has as many values as the input sequence. When rotating the triangle 90°, a pattern emerges
1   2   9   9   9   4                        4   6   1   6   1   1
   1   7   0   0   5                           2   7   7   7   2
      6   7   0   5                     ↱                     5   0   0   9
         1   7   5                                         5   0   9
            6   2                                            5   9
               4                                               4


Upon first glance, it may appear that the pattern is that each pair seems to add the numbers together unless the sum would be greater than 9, in which case the difference is taken. That is not the case. Here is another example:


2   3   6   2                                1   2   1   2
   1   3   4                     ↱                  1   3   3
      2   1                                      4   6
         1                                                 2


This time, there are two results of 1, 2. In two cases, we see 3 as the result, but in the other case we see 1, the difference.


So what is the rule? No idea. 
Infinity
In its purest form, an Inverse Pascal’s Triangle is a non-infinite array of integer sequences containing a non-infinite number of values. The question of infinity is worth exploring.


It is impossible for the array to be infinite while the sequences contain a non-infinite number of values. This is because the total number of values in the array is calculated from the number of values in the input sequence, and since the input sequence is non-infinite, the number of values is known, making the array non-infinite.


Likewise, it is impossible for the array to be non-infinite while the sequences contain an infinite number of values. This is because the input sequence is infinite; therefore, it is impossible to calculate the size of the array.


Therefore, the only application of infinity is an infinite array of sequences containing an infinite number of values.


There are two possible models for an infinite Inverse Pascal’s Triangle.
1. The input sequence begins at a definite point (either the “left” or the “right”) and continues infinitely. In this model,  is known.
2. Neither the beginning of the input sequence nor the end is known. The sequence stretches to infinity in both directions. In this model,  is unknown.


Binary Line and Infinity
It is possible to create an array that will never have a Binary Line. For a non-infinite system, the first OR the last value in the input sequence must be greater than zero. In an infinite system, that uses the first model above, the first element in the sequence MUST be greater than zero, since the last element is unknown.


Other than the stipulations above, there will never be a Binary Line as long as the first value in the input sequence is at least 2, and every other value is 0.






Applications
Additive Hash Algorithm
Since the Inverse Pascal’s Triangle is an algorithm that adds information to the input, it could have limited novelty use as a hash algorithm. 
“Sudoku-like” Puzzle
Extrapolative Applications
Protein Coding
Binary Data